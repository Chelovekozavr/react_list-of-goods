{"version":3,"sources":["List.jsx","App.js","index.js"],"names":["List","state","goods","props","reverse","setState","sortByName","sort","sortByLength","a","b","length","reset","this","className","map","item","key","type","onClick","React","Component","goodsFromServer","App","listVisibility","makeVisible","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMD,QAF1B,EAKEE,QAAU,WACR,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOE,eAP9B,EAWEE,WAAa,WACX,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOK,YAb9B,EAiBEC,aAAe,WACb,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OACdK,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,eApBrC,EAwBEC,MAAQ,WACN,EAAKP,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAM,YAAK,EAAKC,MAAMD,YA1B5B,uDA8BY,IACAA,EAAUW,KAAKZ,MAAfC,MAER,OACE,oCACE,wBAAIY,UAAU,QACXZ,EAAMa,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GACNA,OAIP,4BACEF,UAAU,SACVI,KAAK,SACLC,QAASN,KAAKT,SAHhB,WAOA,4BACEU,UAAU,SACVI,KAAK,SACLC,QAASN,KAAKP,YAHhB,gBAOA,4BACEQ,UAAU,SACVI,KAAK,SACLC,QAASN,KAAKL,cAHhB,kBAOA,4BACEM,UAAU,SACVI,KAAK,SACLC,QAASN,KAAKD,OAHhB,cA/DR,GAA0BQ,IAAMC,WCC1BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEtB,MAAQ,CACNuB,gBAAgB,GAFpB,EAKEC,YAAc,WACZ,EAAKpB,SAAS,CACZmB,gBAAgB,KAPtB,uDAYI,OACE,8BACIX,KAAKZ,MAAMuB,gBACX,4BACEV,UAAU,SACVI,KAAK,SACLC,QAASN,KAAKY,aAHhB,SAQDZ,KAAKZ,MAAMuB,gBACV,kBAAC,EAAD,CAAMtB,MAAOoB,SAxBvB,GAAyBF,IAAMC,WCb/BK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d68aedb0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class List extends React.Component {\n  state = {\n    goods: [...this.props.goods],\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  sortByName = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort(),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods]\n        .sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  reset = () => {\n    this.setState(state => ({\n      goods: [...this.props.goods],\n    }));\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <>\n        <ul className=\"list\">\n          {goods.map(item => (\n            <li key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.reverse}\n        >\n          Reverse\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.sortByName}\n        >\n          Sort by name\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n      </>\n    );\n  }\n}\n\nList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { List } from './List';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    listVisibility: false,\n  }\n\n  makeVisible = () => {\n    this.setState({\n      listVisibility: true,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.listVisibility && (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.makeVisible}\n          >\n            Start\n          </button>\n        )}\n        {this.state.listVisibility && (\n          <List goods={goodsFromServer} />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}